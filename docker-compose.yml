services:

  web-api:
    restart: always
    depends_on:
      migrator:
        condition: service_completed_successfully
      broker:
        condition: service_healthy
    build:
      context: src/server
      dockerfile: Services/WebAPI/Dockerfile
    container_name: web-api

  consumer:
    restart: always
    depends_on:
      migrator:
        condition: service_completed_successfully
      broker:
        condition: service_healthy
    build:
      context: src/server
      dockerfile: Services/Consumer/Dockerfile
    container_name: consumer
  
  migrator:
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    build:
      context: src/server
      dockerfile: Migrator/Dockerfile
    container_name: migrator
    
  db:
    restart: always
    image: postgres:13.3
    container_name: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 5
      
  broker:
    restart: always
    image: rabbitmq:3.10.6-management-alpine
    container_name: broker
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 3s
      timeout: 3s
      retries: 5